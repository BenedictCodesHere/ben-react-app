[
    {
      "id": 1,
        "navbarClassName": "btn btn-block btn-project",
        "navbarIconClass": "bi bi-award",
      "title": "French Tutoring Website",
      "repo":
        "https://github.com/BenedictCodesHere/french-tutoring-website-react", 
        "image":"../assets/images/french-tutoring-website",
        "alt": "Image of deployed application for French tutoring website.",
        "deployed": "https://myfrenchtutor.netlify.app/",
        "description": "Developed as part of a 5-person team, this project was designed using React, Node, Bootstrap and custom CSS. I took the lead on developing the UnsplashComp component, which allows the user to interact with a set of named buttons, to call the Unsplash API with different search queries. I had to make use of the useEffect and useState react hooks in order to effectively manage the flow of data within this component. I also split the data into a separate JSON file, as part of separating concerns appropriately. I configured the Vocalvideo widget for use in React, which required significant amendments to the documented way to embed the code for simple HTML, and also integrated Google Analytics into the format for React."
      },
    {
      "id": 2,
        "navbarClassName": "btn btn-block btn-project",
        "navbarIconClass": "bi bi-clipboard2-check-fill",
      "title": "Code Quiz",
      "repo":
        "https://github.com/BenedictCodesHere/Code-Quiz",
        "image":"../assets/images/code-quiz",
        "alt": "Image of deployed application for Code Quiz.",
        "deployed": "https://benedictcodeshere.github.io/Code-Quiz/",
        "description": "An interactive, educational game where the user's button selections affect the user's score, and also incorrect answers give time penalties. A list of highscores was tracked on a separate HTML page, populating dynamically using scores stored on the client side, in localStorage."
    },
    {
      "id": 3,
        "navbarClassName": "btn btn-block btn-project",
        "navbarIconClass": "bi bi-cloud-drizzle",
      "title":"Weather Dashboard",
      "repo":
        "https://github.com/BenedictCodesHere/Weather-Dashboard",
        "image":"../assets/images/weather-dashboard",
        "alt": "Image of deployed application for Weather Dashboard.",
        "deployed": "https://benedictcodeshere.github.io/Weather-Dashboard/",
        "description": "Focused on API calls, this allows the user to search for the five-day weather forecast using the OpenWeatherMap API. The saved searches of the relevant cities were also populated to the page in the form of buttons, which would enable the user to click on a saved city to once again search for the weather (which would be an up-to-date forecast, as the API call would be a fresh one). I also utilised my CSS skills to create custom animated gradients, reflecting the changing dark-to-light circadian patterns of a day."
    },
    {
        "id": 4,
          "navbarClassName": "btn btn-block btn-project",
          "navbarIconClass": "bi bi-journal-bookmark-fill",
        "title": "Daily Planner",
        "repo":
          "https://github.com/BenedictCodesHere/Daily-Planner",
          "image":"../assets/images/daily-planner",
          "alt": "Image of deployed application for Daily Planner.",
          "deployed": "https://benedictcodeshere.github.io/Daily-Planner/",
          "description": "A daily planner application, which allows the user to input appointments to a working day diary. This was mainly developed using jQuery DOM manipulation, and with localStorage to keep the appointments saved on the client side. The past hours are displayed in red, the future hours in green. The user can input text in the textareas and save the appointments to their localStorage using the save button to the right hand side of the textarea."
      },
      {
        "id": 5,
        "navbarClassName": "btn btn-block btn-project",
        "navbarIconClass": "bi bi-asterisk",
        "title": "Password Generator",
        "repo":
          "https://github.com/BenedictCodesHere/Password-Generator",
          "image":"../assets/images/password-generator",
          "alt": "Image of deployed application for Password Generator.",
          "deployed": "https://benedictcodeshere.github.io/Password-Generator/",
          "description": "Generates a random password for the user, based on the user's selection from 4 inputs: Uppercase, lowercase, numeric, and special characters. The user can refresh the password to generate a new one by simply clicking again on the 'generate password' button. This was done using vanilla JavaScript."
      },
      {
        "id": 6,
        "navbarClassName": "btn btn-block btn-project",
        "navbarIconClass": "bi bi-card-list",
        "title": "README Generator",
        "repo":
          "https://github.com/BenedictCodesHere/README-generator",
          "image":"../assets/images/README-generator",
          "alt": "Image from walkthrough video for README Generator.",
          "deployed": "https://www.youtube.com/watch?v=g5EztzwpbKg",
          "description": "Using Node.js and Inquirer.js, this is a command-line application, with a video walkthrough. It allows the user to build their own README quickly according to a set of prompts. The command line prompts the user to input text for the different sections of a README file. The file is then written to a README, which the user can use in their project."
       
      }
  ]